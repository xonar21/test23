@using GR.Core.Extensions
@*@model GeneralConfigurationsViewModel;*@
@{
    ViewData["Title"] = "Configurations";
}

<OrgDetails />

@section Scripts {
    <script src="~/themes/gear/js/components/textBlock.js"></script>
    <script src="~/themes/gear/js/components/form-controls/textarea.js"></script>
    <script src="~/themes/gear/js/components/form-controls/input.js"></script>
    <script src="~/themes/gear/js/components/form-controls/select.js"></script>
    <script type="text/x-template" id="page-template">
        <div>
            <div class="tab-content" id="myTabContent">
                <div class="tab-pane fade show active" id="details-tab">
                    <div class="col-lg-6 bg-white border rounded py-15 px-20 ml-40px">
                        <hr class="hr-description">
                        <div class="row no-gutters">
                            <div class="col-fixed-220">
                                <p class="p-sm mb-0">Currency</p>
                            </div>
                            <div class="d-block mb-sm-0 mb-1">
                                @*<p class="p-sm mb-0 color-black">@Model.CurrencyCode</p>*@
                                <p class="p-sm mb-0 color-black">Test</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </script>
    @*<script>
            const orgObject = JSON.parse('@Html.Raw(Model.SerializeAsJson().Replace("\\t" , ""))');
            Vue.component('OrgDetails', {
                template: '#page-template',
                data() {
                    return {
                        orgObject
                    }
                },
                beforeCreate() {
                    const breadcrumbs = [
                        'Clients',
                        `<a href="/organizations">Organizations</a>`,
                        `@Model.Name`
                    ]
                    this.$store.dispatch("setCustomBreadcrumbsAction", breadcrumbs);
                },
                mounted() {
                    feather.replace({
                        width: 17,
                        height: 17,
                    });
                },
                methods: {
                    openModal() {
                        this.$refs['modals'].editOrganization('@Model.Id');
                    },
                    modalAction() {
                        location.reload();
                    }
                }
            });
        </script>*@
}