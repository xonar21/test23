@{
	ViewData["Title"] = "Configurations";
}

<GeneralConfiguration />
<LanguageConfiguration />
<EmailNotification />
<NoTaskNotification />
@section Scripts {


	<script src="~/themes/gear/js/components/form-controls/select.js"></script>
	<script src="~/themes/gear/js/components/button.js"></script>
	<script type="text/x-template" id="page-template">
		<div>
			<div class="tab-content">
				<div class="tab-pane fade show active">
					<div class="col-lg-6 bg-white border rounded py-15 px-20 ml-40px">
						<div class="row row-flex">
							<div class="col-4">
								<p>@Localizer["iso_active_currency"]</p>
							</div>
							<Select :id="'currency-List'"
									:options="getConvertedCurrencies"
									:value="getSelectedCurrency"
									:className="'col-8'"
									@@newValue="emitValue" />
						</div>
						<div class="d-flex flex-row-reverse">
							<button id="saveBtn" type="button" class="btn btn-outline-secondary mt-2" v-on:click="submitChanges" :disabled="checkChanges">@Localizer["save"]</button>
						</div>
					</div>
				</div>
			</div>
		</div>
	</script>
	<script>
		Vue.component('GeneralConfiguration', {
			template: '#page-template',
			data() {
				return {
					configurations: {},
					currencies: [],
					selectedCurrency: null,
					saveChanges: false,
				}
			},
			created: async function () {
				this.$store.dispatch('getAllCurrencies');
				customAjaxRequest(apiEndpoints.GeneralConfiguration.GetGeneralConfigurations, 'GET').then(result => {
					if (result) {
						this.configurations = result;
						this.selectedCurrency = result.currencyCode;
					}
				});
				this.currencies = this.getCurrencies;
				this.currencies.push({
					label: "No default currency",
					value: ""
				});
			},
			computed: {
				getCurrencies() {
					return this.$store.state.allCurrencies;
				},
				getConvertedCurrencies() {
					return this.currencies;
				},
				getSelectedCurrency() {
					return this.selectedCurrency;
				},
				checkChanges() {
					return !this.saveChanges;
				}
			},
			mounted: function () {
			},
			methods: {
				submitChanges() {
					this.editGeneralConfigurations().then(() => {
						this.saveChanges = false;
						toast.notify({ icon: "success", heading: "Changes were applied!" })
					});
				},
				async editGeneralConfigurations() {
					this.configurations.currencyCode = this.selectedCurrency;
					return new Promise((resolve, reject) => {
						customAjaxRequest(apiEndpoints.GeneralConfiguration.UpdateGeneralconfigurations, 'POST', this.configurations).then(() => {
							resolve(true);
						}).catch(e => {
							toast.notifyErrorList(e);
							reject(false);
						})
					});
				},
				convertToSelectList(array) {
					if (array) {
						return array.map(e => {
							const newObj = {
								label: e.name,
								value: e.code
							}
							return newObj;
						});
					}
					else return [];
				},
				emitValue(val) {
					this.selectedCurrency = val.value;
					this.saveChanges = true;
				}
			}
		});
	</script>

	<script type="text/x-template" id="language-template">
		<div class="pt-3">
			<div class="tab-content">
				<div class="tab-pane fade show active">
					<div class="col-lg-6 bg-white border rounded py-15 px-20 ml-40px">
						<div class="row row-flex">
							<div class="col-4">
								<p>@Localizer["languages"]</p>
							</div>
							<Select :id="'languages-List'"
									:options="getLanguages"
									:value="getSelectedLanguage"
									:className="'col-8'"
									@@newValue="emitValue" />
						</div>
						<div class="d-flex flex-row-reverse">
							<button id="saveBtn" type="button" class="btn btn-outline-secondary mt-2" v-on:click="submitChanges" :disabled="checkChanges">@Localizer["save"]</button>
						</div>
					</div>
				</div>
			</div>
		</div>
	</script>
	<script>
		Vue.component('LanguageConfiguration', {
			template: '#language-template',
			data() {
				return {
					languages: [],
					selectedLanguage: null,
					saveChanges: false,
				}
			},
			created: async function () {
				customAjaxRequest(apiEndpoints.Localization.GetAvailablesLanguages, 'GET').then(result => {
					this.languages = this.convertLanguagesToSelectList(result);
				});
				customAjaxRequest(apiEndpoints.Localization.GetCurrentLanguage, 'GET').then(result => {
					this.selectedLanguage = result;
				});
			},
			computed: {
				getLanguages() {
					return this.languages;
				},
				getSelectedLanguage() {
					return this.selectedLanguage;
				},
				checkChanges() {
					return !this.saveChanges;
				}
			},
			mounted: function () {
			},
			methods: {
				submitChanges() {
					this.changeLanguage(this.selectedLanguage).then(() => {
						location.reload();
					});
				},
				async changeLanguage(identifier) {
					return new Promise((resolve, reject) => {
						customAjaxRequest(apiEndpoints.Localization.ChangeLanguage, 'GET', { identifier }).then(() => {
							resolve(true);
						}).catch(e => {
							toast.notifyErrorList(e);
							reject(false);
						})
					});
				},
				convertLanguagesToSelectList(array) {
					if (array) {
						return array.map(e => {
							const newObj = {
								label: e.description,
								value: e.locale
							}
							return newObj;
						});
					}
					else return [];
				},
				emitValue(val) {
					this.selectedLanguage = val.value;
					this.saveChanges = true;
				}
			}
		});
	</script>

	<script type="text/x-template" id="users-template">
		<div class="pt-3">
			<div class="tab-content">
				<div class="tab-pane fade show active">
					<div class="col-lg-6 bg-white border rounded py-15 px-20 ml-40px">
						<div class="row row-flex">
							<div class="col-4">
								<p>Send email notification about deadlines</p>
							</div>
							<Select :id="'users-List'"
									:options="getUsers"
									:value="selectedUsers"
									:className="'col-8'"
									:multiple=true
									@@newValue="emitValue" />
						</div>
						<div class="d-flex flex-row-reverse">
							<button id="saveBtn" type="button" class="btn btn-outline-secondary mt-2" v-on:click="submitChanges" :disabled="checkChanges">Send</button>
						</div>
					</div>
				</div>
			</div>
		</div>
	</script>
	<script>
		Vue.component('EmailNotification', {
			template: '#users-template',
			data() {
				return {
					users: [],
					selectedUsers: [],
					saveChanges: false,
				}
			},
			created: async function () {
				customAjaxRequest(apiEndpoints.Users.GetUsers, 'GET').then(result => {
					this.users = this.convertToSelectList(result);
				});
			},
			computed: {
				getUsers() {
					return this.users;
				},
				checkChanges() {
					return !this.saveChanges;
				}
			},
			mounted: function () {
			},
			methods: {
				submitChanges() {
					this.notifyUsers(this.selectedUsers).then(() => {
					});
				},
				async notifyUsers(users) {
					return new Promise((resolve, reject) => {
						customAjaxRequest(apiEndpoints.CrmCommon.NotifyUsersAboutDeadlines, 'POST', { users }).then(() => {
							resolve(true);
						}).catch(e => {
							toast.notifyErrorList(e);
							reject(false);
						})
					});
				},
				convertToSelectList(array) {
					if (array) {
						return array.map(e => {
							const newObj = {
								label: e.email,
								value: e.id
							}
							return newObj;
						});
					}
					else return [];
				},
				emitValue(val) {
					this.selectedUsers = val.value;
					this.saveChanges = true;
				}
			}
		});
	</script>

	<script type="text/x-template" id="noTask-template">
		<div class="pt-3">
			<div class="tab-content">
				<div class="tab-pane fade show active">
					<div class="col-lg-6 bg-white border rounded py-15 px-20 ml-40px">
						<div class="row row-flex">
							<div class="col-4">
								<p>Send email notification about opportunities with no tasks</p>
							</div>
							<Select :id="'usersNoTask-List'"
									:options="getUsers"
									:value="selectedUsers"
									:className="'col-8'"
									:multiple=true
									@@newValue="emitValue" />
						</div>
						<div class="d-flex flex-row-reverse">
							<button id="saveBtn" type="button" class="btn btn-outline-secondary mt-2" v-on:click="submitChanges" :disabled="checkChanges">Send</button>
						</div>
					</div>
				</div>
			</div>
		</div>
	</script>
	<script>
		Vue.component('NoTaskNotification', {
			template: '#noTask-template',
			data() {
				return {
					users: [],
					selectedUsers: [],
					saveChanges: false,
				}
			},
			created: async function () {
				customAjaxRequest(apiEndpoints.Users.GetUsers, 'GET').then(result => {
					this.users = this.convertToSelectList(result);
				});
			},
			computed: {
				getUsers() {
					return this.users;
				},
				checkChanges() {
					return !this.saveChanges;
				}
			},
			mounted: function () {
			},
			methods: {
				submitChanges() {
					this.notifyUsers(this.selectedUsers).then(() => {
					});
				},
				async notifyUsers(users) {
					return new Promise((resolve, reject) => {
						customAjaxRequest(apiEndpoints.CrmCommon.NotifyUsersAboutLeadsWithNoActiveTasks, 'POST', { users }).then(() => {
							resolve(true);
						}).catch(e => {
							toast.notifyErrorList(e);
							reject(false);
						})
					});
				},
				convertToSelectList(array) {
					if (array) {
						return array.map(e => {
							const newObj = {
								label: e.email,
								value: e.id
							}
							return newObj;
						});
					}
					else return [];
				},
				emitValue(val) {
					this.selectedUsers = val.value;
					this.saveChanges = true;
				}
			}
		});
	</script>
}